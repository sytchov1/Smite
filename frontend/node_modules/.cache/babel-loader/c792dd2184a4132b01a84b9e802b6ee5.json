{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nexport const useWindowSize = () => {\n  _s();\n\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined\n  });\n  useEffect(() => {\n    console.log(11111111111111); // Handler to call on window resize\n\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    } // Add event listener\n\n\n    window.addEventListener(\"resize\", handleResize); // Call handler right away so state gets updated with initial window size\n\n    handleResize(); // Remove event listener on cleanup\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n};\n\n_s(useWindowSize, \"KDnSZXZID0J9brnGdsQ5nH1K0Ao=\");","map":{"version":3,"sources":["E:/django/Smite/frontend/src/hooks/useWindowSize.js"],"names":["useState","useEffect","useWindowSize","windowSize","setWindowSize","width","undefined","height","console","log","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAGA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC/B;AACA;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC;AAC3CK,IAAAA,KAAK,EAAEC,SADoC;AAE3CC,IAAAA,MAAM,EAAED;AAFmC,GAAD,CAA5C;AAKAL,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EADY,CAEd;;AACA,aAASC,YAAT,GAAwB;AACtB;AACAN,MAAAA,aAAa,CAAC;AACZC,QAAAA,KAAK,EAAEM,MAAM,CAACC,UADF;AAEZL,QAAAA,MAAM,EAAEI,MAAM,CAACE;AAFH,OAAD,CAAb;AAID,KATa,CAUd;;;AACAF,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCJ,YAAlC,EAXc,CAYd;;AACAA,IAAAA,YAAY,GAbE,CAcd;;AACA,WAAO,MAAMC,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCL,YAArC,CAAb;AACD,GAhBQ,EAgBN,EAhBM,CAAT,CAR+B,CAwBvB;;AAER,SAAOP,UAAP;AACH,CA3BM;;GAAMD,a","sourcesContent":["import { useState, useEffect } from 'react'\r\n\r\n\r\nexport const useWindowSize = () => {\r\n    // Initialize state with undefined width/height so server and client renders match\r\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\r\n    const [windowSize, setWindowSize] = useState({\r\n      width: undefined,\r\n      height: undefined,\r\n    });\r\n\r\n    useEffect(() => {\r\n        console.log(11111111111111);\r\n      // Handler to call on window resize\r\n      function handleResize() {\r\n        // Set window width/height to state\r\n        setWindowSize({\r\n          width: window.innerWidth,\r\n          height: window.innerHeight,\r\n        });\r\n      }\r\n      // Add event listener\r\n      window.addEventListener(\"resize\", handleResize);\r\n      // Call handler right away so state gets updated with initial window size\r\n      handleResize();\r\n      // Remove event listener on cleanup\r\n      return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, []); // Empty array ensures that effect is only run on mount\r\n\r\n    return windowSize;\r\n}"]},"metadata":{},"sourceType":"module"}